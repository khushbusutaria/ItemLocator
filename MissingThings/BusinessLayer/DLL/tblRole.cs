
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;

namespace BusinessLayer
{
    public class tblRole : _tblRole
    {
        public tblRole()
        {

        }

        public DataTable LoadGridData(string strColumnName, string strColumnValue, bool isSuperAdmin, string userId = "")
        {
            strColumnValue = strColumnValue.Replace("'", "");

            string StrQuery = "select appRoleId, appRoleName, appDescription from tblRole ";

            if (isSuperAdmin)
            {
                StrQuery += " where 1=1 ";
            }
            else
            {
                StrQuery += "where appCreatedBy = " + userId;
            }

            if (!string.IsNullOrEmpty(strColumnValue) & strColumnName != "0")
            {
                StrQuery += " and " + strColumnName + " LIKE '%" + strColumnValue + "%'";
            }
            else if (!string.IsNullOrEmpty(strColumnName))
            {
                StrQuery += "and ( " + ColumnNames.AppRoleName + " LIKE '%" + strColumnValue + "%' ";
                StrQuery += " OR " + ColumnNames.AppDescription + " LIKE '%" + strColumnValue + "%' )";
            }

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }
        public DataTable LoadPermissionTab(string strRoleID, string strParrentID = "", string StrTabId = "", bool isSuperAdmin = false, string hdnpkID = "")
        {
            string StrQuery = null;

            string strTblClause = "";
            string strColumns = "";

            if (isSuperAdmin)
            {
                strTblClause = "tblTab as tabTable left join tblPermission as permissionTable ";
                strColumns = " ISNULL(tabTable.appIsAdd, 0) as appIsTabAdd, ISNULL(tabTable.appIsEdit, 0) as appIsTabEdit, ISNULL(tabTable.appIsDelete,0) as appIsTabDelete ";

                StrQuery = "Select tabTable.appTabId, appParentId,appAddPage, appTabName,appIsMenu,appWebPageName,  ISNULL(permissionTable.appIsAdd, 0) as appIsAdd, ISNULL(permissionTable.appIsEdit, 0) as appIsEdit, ISNULL(permissionTable.appIsDelete,0) as appIsDelete, ";
                StrQuery += " ISNULL(permissionTable.appIsView, 0) as appIsView, ";
                StrQuery += " appParentId, appTabName,  " + strColumns;
                StrQuery += " from " + strTblClause + " on permissionTable.appTabId = tabTable.appTabId and permissionTable.appRoleId = " + strRoleID;
                StrQuery += " where appIsActive = 1 ";

                if (!string.IsNullOrEmpty(strParrentID))
                {
                    StrQuery += " And appParentID=" + strParrentID;
                }

                if (!string.IsNullOrEmpty(StrTabId))
                {
                    StrQuery += "  And tabTable.appTabId = " + StrTabId;
                }

                if (!string.IsNullOrEmpty(StrTabId))
                {
                    StrQuery += "  And T.appTabId = " + StrTabId;
                }
                StrQuery += " Order By appDisplayOrder Asc ";

            }
            else
            {
                if (!string.IsNullOrEmpty(hdnpkID))
                {
                    strTblClause = "tblPermission as permissionTable inner join tblTab as tabTable ";
                    strColumns = " ISNULL(permissionTable.appIsAdd, 0) as appIsTabAdd, ISNULL(permissionTable.appIsEdit, 0) as appIsTabEdit, ISNULL(permissionTable.appIsDelete,0) as appIsTabDelete";
                    StrQuery = "select *,ISNULL(p.appIsAdd, 0) as appIsAdd, ISNULL(p.appIsEdit, 0) as appIsEdit, ISNULL(p.appIsDelete,0) as appIsDelete,ISNULL(p.appIsView, 0) as appIsView from (";
                    StrQuery += "Select tabTable.appTabId,appAddPage,appIsMenu,appWebPageName, ";
                    StrQuery += " tabTable.appDisplayOrder, ";
                    StrQuery += " appParentId, appTabName,  " + strColumns;
                    StrQuery += " from " + strTblClause + " on permissionTable.appTabId = tabTable.appTabId ";
                    StrQuery += " where appIsActive = 1 and AppIsView= 1 and permissionTable.appRoleId = " + strRoleID;

                    if (!string.IsNullOrEmpty(strParrentID))
                    {
                        StrQuery += " And appParentID=" + strParrentID;
                    }
                    if (!string.IsNullOrEmpty(StrTabId))
                    {
                        StrQuery += "  And tabTable.appTabId = " + StrTabId;
                    }



                    StrQuery += ") a left join tblPermission P on a.appTabID=P.appTabiD  Where p.appRoleId = " + hdnpkID;
                    StrQuery += " Order By appDisplayOrder Asc ";

                }
                else
                {
                    strTblClause = "tblPermission as permissionTable inner join tblTab as tabTable ";
                    strColumns = " ISNULL(permissionTable.appIsAdd, 0) as appIsTabAdd, ISNULL(permissionTable.appIsEdit, 0) as appIsTabEdit, ISNULL(permissionTable.appIsDelete,0) as appIsTabDelete";

                    StrQuery = "select 0 as appIsAdd, 0 as appIsEdit, 0 as appIsDelete,0 as appIsView, ";
                    StrQuery += " tabTable.appTabId,appAddPage,appIsMenu,appWebPageName, ";
                    StrQuery += " appParentId, appTabName,  " + strColumns;
                    StrQuery += " from " + strTblClause + " on permissionTable.appTabId = tabTable.appTabId ";
                    StrQuery += " where appIsActive = 1 and AppIsView= 1 and permissionTable.appRoleId = " + strRoleID;

                    if (!string.IsNullOrEmpty(strParrentID))
                    {
                        StrQuery += " And appParentID=" + strParrentID;
                    }
                    if (!string.IsNullOrEmpty(StrTabId))
                    {
                        StrQuery += "  And tabTable.appTabId = " + StrTabId;
                    }

                    StrQuery += " Order By appDisplayOrder Asc ";
                }

            }

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }



        public DataTable LoadPermissionTabMenu(string strRoleID, string strParrentID = "", string StrTabId = "", bool isSuperAdmin = false)
        {
            string StrQuery = null;
            string strTblClause = "";
            string strColumns = "";

            if (isSuperAdmin)
            {
                strTblClause = "tblTab as tabTable left join tblPermission as permissionTable ";
                strColumns = " ISNULL(tabTable.appIsAdd, 0) as appIsTabAdd, ISNULL(tabTable.appIsEdit, 0) as appIsTabEdit, ISNULL(tabTable.appIsDelete,0) as appIsTabDelete ";
            }
            else
            {
                strTblClause = "tblPermission as permissionTable inner join tblTab as tabTable ";
                strColumns = " ISNULL(permissionTable.appIsAdd, 0) as appIsTabAdd, ISNULL(permissionTable.appIsEdit, 0) as appIsTabEdit, ISNULL(permissionTable.appIsDelete,0) as appIsTabDelete ";
            }



            StrQuery = "Select tabTable.appTabId, appParentId,appAddPage, appTabName,appIsMenu,appWebPageName,  ISNULL(permissionTable.appIsAdd, 0) as appIsAdd, ISNULL(permissionTable.appIsEdit, 0) as appIsEdit, ISNULL(permissionTable.appIsDelete,0) as appIsDelete, ";
            StrQuery += " ISNULL(permissionTable.appIsView, 0) as appIsView, ";
            StrQuery += " appParentId, appTabName,  " + strColumns;
            StrQuery += " from " + strTblClause + " on permissionTable.appTabId = tabTable.appTabId and permissionTable.appRoleId = " + strRoleID;
            StrQuery += " where appIsActive = 1 ";

            if (!string.IsNullOrEmpty(strParrentID))
            {
                StrQuery += " And appParentID=" + strParrentID;
            }

            if (isSuperAdmin == false)
            {
                StrQuery += "and AppIsView= 1";
            }
            if (!string.IsNullOrEmpty(StrTabId))
            {
                StrQuery += "  And tabTable.appTabId = " + StrTabId;
            }

            StrQuery += " Order By appDisplayOrder Asc ";

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public int GetTotalRole(string strUserId, bool IsSuperAdmin)
        {
            string StrQuery = "Select count(*) as Total from tblRole ";
            if  (! IsSuperAdmin )
            {
                 StrQuery += " Where appCreatedBy=" + strUserId;
            }
            base.LoadFromRawSql(StrQuery);
            if (base.DefaultView.Table.Rows.Count > 0)
            {
                if (base.DefaultView.Table.Rows[0][0].ToString() != "")
                {
                    return Convert.ToInt32(base.DefaultView.Table.Rows[0][0].ToString());
                }
                else
                {
                    return 0;
                }
            }
            else
            {
                return 0;
            }
        }
    }
}
