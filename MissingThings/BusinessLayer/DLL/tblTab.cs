
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Collections.Specialized;

namespace BusinessLayer
{
	public class tblTab : _tblTab
	{
		public tblTab()
		{
		
		}


        public DataTable LoadGridData(string strColumnName, string strColumnValue, string whereCondition = "")
        {
            strColumnValue = strColumnValue.Replace("'", "");

            string StrQuery = "select appTabId, appTabName, appWebPageName, appParentId, appIsAdd, appIsEdit, appIsDelete, appIsActive, appDisplayOrder,appIsShowOnDashboard";
            StrQuery += " from tblTab ";

            if (string.IsNullOrEmpty(whereCondition))
            {
                StrQuery += " where 1 = 1 ";
            }
            else
            {
                StrQuery += " where " + whereCondition;
            }

            if (!string.IsNullOrEmpty(strColumnValue) & strColumnName != "0")
            {
                StrQuery += " and " + strColumnName + " LIKE '%" + strColumnValue + "%'";
            }
            else if (!string.IsNullOrEmpty(strColumnName))
            {
                StrQuery += " and " + ColumnNames.AppTabName + " LIKE '%" + strColumnValue + "%'  ";
            }

            StrQuery += " order by appDisplayOrder ";

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public void updateIsMenu()
        {
            string strQuery = "update tblTab set appIsMenu=0 Where appIsMenu=1";
            base.LoadFromRawSql(strQuery);
        }


        public object LoadTabs()
        {
            string StrQuery = "select appTabId, appTabName, appWebPageName, appParentId, appAddPage, appDisplayOrder, appIsMenu from tblTab";
            StrQuery += " where appIsActive = 1 order by appDisplayOrder";

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public DataTable LoadPermissionForTab(string strWebPage, int intRoleId)
        {
            string StrQuery = "select tblPermission.appTabId, tblPermission.appPermissionId, tblPermission.appIsView as appIsView, tblPermission.appIsAdd, tblPermission.appIsEdit, tblPermission.appIsDelete from tblTab ";
            StrQuery += " inner join tblPermission on tblPermission.appTabId = tblTab.appTabId where (tblTab.appWebPageName = '" + strWebPage.ToString() + "'";
            StrQuery += " or tblTab.appAddPage = '" + strWebPage.ToString() + "') ";
            StrQuery += " and tblPermission.appRoleID = " + intRoleId.ToString();

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }
        public DataTable GetSiteMap(int AppTabID)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add("@TabId", AppTabID);

            base.LoadFromSql("getabSiteMapT", parameters);
            return base.DefaultView.Table;
        }
        public DataTable GetMenuType(int tabId)
        {
            string StrQuery = "select appTabId, appTabName from tbltab  where appParentId = " + tabId.ToString();

            // inner join tblMenuType " StrQuery += " on tblTab.appParentId = tblMenuType.appParentId"
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

	}
}
